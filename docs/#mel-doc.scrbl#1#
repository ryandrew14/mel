#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 957 0 28 3 21 #"#lang scribble/manual"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"@; Document information"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 5 #"title"
0 0 24 3 1 #"["
0 0 23 3 5 #"#:tag"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"mel-doc\""
0 0 24 3 1 #" "
0 0 23 3 6 #"#:date"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"March 28, 2018\""
0 0 24 3 2 #"]{"
0 0 20 3 3 #"MEL"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 6 #"author"
0 0 24 3 1 #"["
0 0 19 3 26 #"\"Da-Jin Chu and Ryan Drew\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 12 #"Introduction"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 85
(
 #"Mel is a #lang for racket that provides basic tools to make music. T"
 #"he programmer can"
) 0 0 24 29 1 #"\n"
0 0 20 3 91
(
 #"define musical statements such as series of sounds and loops that ar"
 #"e simultaneously played"
) 0 0 24 29 1 #"\n"
0 0 20 3 92
(
 #"upon running the Mel program. The programmer assigns pitches and rhy"
 #"thms to these statements"
) 0 0 24 29 1 #"\n"
0 0 20 3 64
#"as well as the musical instrument with which to play the sounds."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 17 #"Program Structure"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 93
(
 #"Mel programs begin with a tempo statement, followed by a series of d"
 #"efine or play statements."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 16 #"A Sample Program"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 9 #"codeblock"
0 0 24 3 1 #"{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 9 #"#lang mel"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 5 #"tempo"
0 0 20 3 1 #" "
0 0 20 3 3 #"80)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 6 #"define"
0 0 20 3 1 #" "
0 0 20 3 4 #"seqA"
0 0 20 3 1 #" "
0 0 20 3 1 #"'"
0 0 20 3 1 #"("
0 0 20 3 1 #"1"
0 0 20 3 1 #" "
0 0 20 3 1 #"2"
0 0 20 3 1 #" "
0 0 20 3 1 #"3"
0 0 20 3 1 #" "
0 0 20 3 3 #"4))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 6 #"define"
0 0 20 3 1 #" "
0 0 20 3 4 #"seqB"
0 0 20 3 1 #" "
0 0 20 3 1 #"'"
0 0 20 3 1 #"("
0 0 20 3 1 #"1"
0 0 20 3 1 #" "
0 0 20 3 3 #"2))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 6 #"define"
0 0 20 3 6 #" loop1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 4 #"loop"
0 0 20 3 10 #" 4 (player"
0 0 20 3 1 #" "
0 0 20 3 5 #"hihat"
0 0 20 3 1 #" "
0 0 20 3 7 #"seqB)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 4 #"play"
0 0 20 3 1 #" "
0 0 20 3 6 #"loop1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 4 #"play"
0 0 20 3 2 #" ("
0 0 20 3 4 #"loop"
0 0 20 3 1 #" "
0 0 20 3 9 #"4 (player"
0 0 20 3 1 #" "
0 0 20 3 5 #"hihat"
0 0 20 3 1 #" "
0 0 20 3 7 #"seqA)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 4 #"play"
0 0 20 3 2 #" ("
0 0 20 3 4 #"loop"
0 0 20 3 1 #" "
0 0 20 3 9 #"4 (reverb"
0 0 20 3 2 #" ("
0 0 20 3 6 #"player"
0 0 20 3 1 #" "
0 0 20 3 5 #"snare"
0 0 20 3 1 #" "
0 0 20 3 8 #"seqB))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 1 #"("
0 0 20 3 4 #"play"
0 0 20 3 2 #" ("
0 0 20 3 4 #"loop"
0 0 20 3 9 #" 4 (pitch"
0 0 20 3 1 #" "
0 0 20 3 4 #"Cmaj"
0 0 20 3 1 #" "
0 0 20 3 1 #"'"
0 0 20 3 1 #"("
0 0 20 3 1 #"1"
0 0 20 3 1 #" "
0 0 20 3 1 #"2"
0 0 20 3 1 #" "
0 0 20 3 1 #"3"
0 0 20 3 1 #" "
0 0 20 3 1 #"5"
0 0 20 3 3 #") ("
0 0 20 3 6 #"player"
0 0 20 3 1 #" "
0 0 20 3 5 #"synth"
0 0 20 3 1 #" "
0 0 20 3 1 #"'"
0 0 20 3 1 #"("
0 0 20 3 1 #"1"
0 0 20 3 1 #" "
0 0 20 3 1 #"2"
0 0 20 3 1 #" "
0 0 20 3 1 #"3"
0 0 20 3 1 #" "
0 0 20 3 6 #"4)))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"@; Grammar"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 7 #"Grammar"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"@("
0 0 14 3 14 #"racketgrammar*"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"program"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"tempo"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 8 #"top-expr"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 8 #"top-expr"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"play"
0 0 24 3 1 #" "
0 0 14 3 11 #"player-expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"expr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 1 #"N"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 11 #"player-expr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"id"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 11 #"player-expr"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 10 #"instrument"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"pitch"
0 0 24 3 1 #" "
0 0 14 3 8 #"Key-name"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #") "
0 0 14 3 11 #"player-expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 11 #"player-expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"reverb"
0 0 24 3 1 #" "
0 0 14 3 1 #"N"
0 0 24 3 1 #" "
0 0 14 3 11 #"player-expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 2 #"id"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 10 #"instrument"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"hihat"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 8 #"bassdrum"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"snare"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"kick"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"crash"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"synth"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #"@; Application"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-exp?"
0 0 24 3 2 #"]["
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 7 #"Applies"
0 0 20 3 15 #" the functions "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 20 3 4 #" to "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 3 #"arg"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 23 #"in left-to-right order."
0 0 24 29 1 #"\n"
0 0 24 3 3 #" @("
0 0 14 3 11 #"racketblock"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 3 #")) "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 2 #"))"
0 0 20 3 1 #" "
0 0 20 3 16 #"is equivalent to"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" @("
0 0 14 3 11 #"racketblock"
0 0 24 3 3 #" (("
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 2 #"f2"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"@; Lambda of a single s-Expression"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-exp?"
0 0 24 3 1 #" "
0 0 14 3 3 #"id?"
0 0 24 3 3 #")]["
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 11 #"expression?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 5 #"Takes"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 6 #"single"
0 0 20 3 17 #" shaped argument "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 3 #"arg"
0 0 24 3 1 #"]"
0 0 20 3 2 #" ("
0 0 20 3 4 #"that"
0 0 20 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 1 #","
0 0 20 3 1 #" "
0 0 20 3 2 #"an"
0 0 20 3 1 #" "
0 0 20 3 12 #"s-expression"
0 0 20 3 8 #") and a "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 4 #"body"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 10 #"expression"
0 0 20 3 1 #" "
0 0 20 3 3 #"and"
0 0 20 3 1 #" "
0 0 20 3 7 #"returns"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 17 #" procedure whose "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 4 #"body"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 10 #"expression"
0 0 20 3 1 #" "
0 0 20 3 3 #"can"
0 0 20 3 1 #" "
0 0 20 3 19 #"use any identifiers"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 9 #"bound in "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 3 #"arg"
0 0 24 3 1 #"]"
0 0 20 3 2 #". "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 3 #"arg"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 3 #"may"
0 0 20 3 7 #" be an "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"id"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 2 #"or"
0 0 20 3 1 #" "
0 0 20 3 2 #"it"
0 0 20 3 1 #" "
0 0 20 3 3 #"may"
0 0 20 3 1 #" "
0 0 20 3 2 #"be"
0 0 20 3 1 #" "
0 0 20 3 18 #"a shaped argument."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 3 #"If "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 3 #"arg"
0 0 24 3 1 #"]"
0 0 20 3 7 #" is an "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"id"
0 0 24 3 1 #"]"
0 0 20 3 2 #", "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"->"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 4 #"will"
0 0 20 3 1 #" "
0 0 20 3 7 #"receive"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 4 #"list"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 3 #"the"
0 0 20 3 1 #" "
0 0 20 3 16 #"arguments it was"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 6 #"called"
0 0 20 3 12 #" with (like "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 2 #"[("
0 0 15 3 2 #"\316\273"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 20 3 1 #")"
0 0 20 3 1 #"."
0 0 20 3 1 #" "
0 0 20 3 6 #"Should"
0 0 20 3 1 #" "
0 0 20 3 7 #"produce"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 4 #"list"
0 0 20 3 1 #" "
0 0 20 3 2 #"or"
0 0 20 3 1 #" "
0 0 20 3 2 #"an"
0 0 20 3 1 #" "
0 0 20 3 4 #"atom"
0 0 20 3 1 #","
0 0 20 3 1 #" "
0 0 20 3 11 #"and an atom"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 1 #" "
0 0 20 3 10 #"equivalent"
0 0 20 3 1 #" "
0 0 20 3 2 #"to"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 4 #"list"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 6 #"length"
0 0 20 3 1 #" "
0 0 20 3 2 #"1."
0 0 20 3 1 #" "
0 0 20 3 4 #"This"
0 0 20 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 1 #" "
0 0 20 3 4 #"done"
0 0 20 3 1 #" "
0 0 20 3 7 #"because"
0 0 20 3 21 #" Pipelines functions "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 4 #"take"
0 0 20 3 1 #" "
0 0 20 3 5 #"their"
0 0 20 3 1 #" "
0 0 20 3 9 #"arguments"
0 0 20 3 1 #" "
0 0 20 3 3 #"and"
0 0 20 3 1 #" "
0 0 20 3 6 #"return"
0 0 20 3 1 #" "
0 0 20 3 5 #"their"
0 0 20 3 1 #" "
0 0 20 3 7 #"results"
0 0 20 3 11 #" as lists. "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"@; How do functions work?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 25 #"Functions using Pipelines"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 16 #"Shaped Arguments"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 5 #"While"
0 0 20 3 1 #" "
0 0 20 3 6 #"Racket"
0 0 20 3 1 #" "
0 0 20 3 9 #"functions"
0 0 20 3 1 #" "
0 0 20 3 4 #"take"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 6 #"series"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 9 #"arguments"
0 0 20 3 2 #" ("
0 0 20 3 12 #"conceptually"
0 0 20 3 1 #" "
0 0 20 3 7 #"similar"
0 0 20 3 1 #" "
0 0 20 3 2 #"to"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 4 #"list"
0 0 20 3 1 #")"
0 0 20 3 1 #","
0 0 20 3 10 #" Pipelines"
0 0 24 29 1 #"\n"
0 0 20 3 9 #"functions"
0 0 20 3 1 #" "
0 0 20 3 4 #"take"
0 0 20 3 1 #" "
0 0 20 3 5 #"their"
0 0 20 3 1 #" "
0 0 20 3 9 #"arguments"
0 0 20 3 1 #" "
0 0 20 3 2 #"in"
0 0 20 3 1 #" "
0 0 20 3 9 #"arbitrary"
0 0 20 3 1 #" "
0 0 20 3 8 #"\"shapes\""
0 0 20 3 2 #" ("
0 0 20 3 7 #"similar"
0 0 20 3 1 #" "
0 0 20 3 2 #"to"
0 0 20 3 1 #" "
0 0 20 3 13 #"S-expressions"
0 0 20 3 1 #")"
0 0 20 3 1 #"."
0 0 20 3 1 #" "
0 0 20 3 4 #"This"
0 0 20 3 6 #" means"
0 0 24 29 1 #"\n"
0 0 20 3 4 #"that"
0 0 20 3 1 #" "
0 0 20 3 2 #"if"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 5 #"value"
0 0 20 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 1 #" "
0 0 20 3 6 #"passed"
0 0 20 3 1 #" "
0 0 20 3 2 #"to"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 8 #"function"
0 0 20 3 1 #" "
0 0 20 3 4 #"that"
0 0 20 3 1 #" "
0 0 20 3 7 #"expects"
0 0 20 3 1 #" "
0 0 20 3 2 #"an"
0 0 20 3 1 #" "
0 0 20 3 8 #"argument"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 9 #"different"
0 0 20 3 1 #" "
0 0 20 3 6 #"shape,"
0 0 24 29 1 #"\n"
0 0 20 3 3 #"the"
0 0 20 3 1 #" "
0 0 20 3 8 #"function"
0 0 20 3 1 #" "
0 0 20 3 4 #"will"
0 0 20 3 1 #" "
0 0 20 3 6 #"return"
0 0 20 3 1 #" "
0 0 20 3 2 #"an"
0 0 20 3 7 #" error."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"@; How about calling Pipelines functions?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 27 #"Calling Pipelines Functions"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 9 #"Pipelines"
0 0 20 3 1 #" "
0 0 20 3 9 #"functions"
0 0 20 3 1 #" "
0 0 20 3 3 #"can"
0 0 20 3 1 #" "
0 0 20 3 2 #"be"
0 0 20 3 1 #" "
0 0 20 3 7 #"applied"
0 0 20 3 1 #" "
0 0 20 3 2 #"in"
0 0 20 3 1 #" "
0 0 20 3 3 #"two"
0 0 20 3 1 #" "
0 0 20 3 5 #"ways."
0 0 20 3 1 #" "
0 0 20 3 4 #"When"
0 0 20 3 1 #" "
0 0 20 3 6 #"inside"
0 0 20 3 1 #" "
0 0 20 3 2 #"a "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"||"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 4 #"form"
0 0 20 3 1 #","
0 0 20 3 1 #" "
0 0 20 3 9 #"Pipelines"
0 0 20 3 10 #" functions"
0 0 24 29 1 #"\n"
0 0 20 3 3 #"can"
0 0 20 3 1 #" "
0 0 20 3 2 #"be"
0 0 20 3 1 #" "
0 0 20 3 6 #"called"
0 0 20 3 1 #" "
0 0 20 3 6 #"using "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 2 #"[["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 2 #"]]"
0 0 20 3 1 #" "
0 0 20 3 2 #"as"
0 0 20 3 1 #" "
0 0 20 3 10 #"documented"
0 0 20 3 1 #" "
0 0 20 3 5 #"above"
0 0 20 3 1 #" "
0 0 20 3 2 #"OR"
0 0 20 3 1 #" "
0 0 20 3 2 #"as"
0 0 20 3 1 #" "
0 0 20 3 6 #"Racket"
0 0 20 3 1 #" "
0 0 20 3 9 #"functions"
0 0 20 3 6 #" using"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 2 #"[{"
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"}]"
0 0 20 3 1 #"."
0 0 20 3 1 #" "
0 0 20 3 4 #"When"
0 0 20 3 1 #" "
0 0 20 3 7 #"outside"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 2 #"a "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 2 #"||"
0 0 24 3 1 #"]"
0 0 20 3 1 #" "
0 0 20 3 4 #"form"
0 0 20 3 1 #","
0 0 20 3 1 #" "
0 0 20 3 9 #"Pipelines"
0 0 20 3 1 #" "
0 0 20 3 9 #"functions"
0 0 20 3 1 #" "
0 0 20 3 3 #"can"
0 0 20 3 1 #" "
0 0 20 3 2 #"be"
0 0 20 3 1 #" "
0 0 20 3 6 #"called"
0 0 20 3 1 #" "
0 0 20 3 2 #"in"
0 0 20 3 7 #" either"
0 0 24 29 1 #"\n"
0 0 20 3 3 #"way"
0 0 20 3 1 #" "
0 0 20 3 5 #"using"
0 0 20 3 1 #" "
0 0 20 3 6 #"normal"
0 0 20 3 13 #" parentheses."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"@; Style and stuff"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 1 #"A"
0 0 20 3 1 #" "
0 0 20 3 13 #"Note on Style"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 20 3 2 #"We"
0 0 20 3 1 #" "
0 0 20 3 6 #"choose"
0 0 20 3 1 #" "
0 0 20 3 2 #"to"
0 0 20 3 1 #" "
0 0 20 3 6 #"write "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 2 #"[["
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 2 #"f1"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #"]]"
0 0 20 3 1 #" "
0 0 20 3 4 #"with"
0 0 20 3 1 #" "
0 0 20 3 8 #"brackets"
0 0 20 3 1 #" "
0 0 20 3 6 #"rather"
0 0 20 3 1 #" "
0 0 20 3 4 #"than"
0 0 20 3 1 #" "
0 0 20 3 11 #"parentheses"
0 0 20 3 1 #" "
0 0 20 3 2 #"in"
0 0 20 3 1 #" "
0 0 20 3 5 #"order"
0 0 20 3 3 #" to"
0 0 24 29 1 #"\n"
0 0 20 3 4 #"keep"
0 0 20 3 7 #" visual"
0 0 24 29 1 #"\n"
0 0 20 3 11 #"consistency"
0 0 20 3 1 #" "
0 0 20 3 2 #"so"
0 0 20 3 1 #" "
0 0 20 3 4 #"that"
0 0 20 3 1 #" "
0 0 20 3 1 #"a"
0 0 20 3 1 #" "
0 0 20 3 8 #"pipeline"
0 0 20 3 1 #" "
0 0 20 3 2 #"of"
0 0 20 3 1 #" "
0 0 20 3 9 #"functions"
0 0 20 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 1 #" "
0 0 20 3 6 #"always"
0 0 20 3 1 #" "
0 0 20 3 10 #"surrounded"
0 0 20 3 1 #" "
0 0 20 3 2 #"by"
0 0 20 3 1 #" "
0 0 20 3 6 #"square"
0 0 20 3 1 #" "
0 0 20 3 8 #"brackets"
0 0 20 3 1 #" "
0 0 20 3 3 #"and"
0 0 20 3 1 #" "
0 0 20 3 2 #"is"
0 0 20 3 7 #" easily"
0 0 24 29 1 #"\n"
0 0 20 3 12 #"identifiable"
0 0 20 3 1 #" "
0 0 20 3 2 #"as"
0 0 20 3 6 #" such."
0           0
