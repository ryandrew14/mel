#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 57 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 3074 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 6 #"rsound"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 18 #"rsound/piano-tones"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"contract-out"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Update the tempo and beat length"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 40 #"; EFFECT sets the tempo and beat length."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 12 #"update-tempo"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 1 #" "
0 0 14 3 5 #"void?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 58
#"; play-song runs indefinitely, playing the specified song."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 28 #"; EFFECT plays notes FOREVER"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 9 #"play-song"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"song?"
0 0 24 3 1 #" "
0 0 14 3 5 #"void?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 33 #"; Instrument [Listof N] -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 78
(
 #"; Creates a player object given an instrument and when to play the i"
 #"nstrument."
) 0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 11 #"instrument?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 2 #") "
0 0 14 3 7 #"player?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 20 #"; N Player -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 49 #"; Loops a player using the specified loop length."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 8 #"set-loop"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 37 #"; Key [Listof Pitch] Player -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 33 #"; Sets the pitches of the player."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 11 #"set-pitches"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 3 #") ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 8 #"integer?"
0 0 24 3 2 #") "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 18 #"; Player -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 28 #"; Sets reverb to the player."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 10 #"set-reverb"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 25 #"; Number Player -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 35 #"; Sets the amplitude of the player."
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 7 #"set-amp"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 34 #"; [Listof Number] Player -> Player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 17 3 48 #"; Sets the amplitude of each note of the player "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 8 #"set-amps"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 2 #") "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 6 #"; Keys"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"Cmaj"
0 0 24 3 1 #" "
0 0 14 3 5 #"C#maj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Dmaj"
0 0 24 3 1 #" "
0 0 14 3 5 #"D#maj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Emaj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Fmaj"
0 0 24 3 1 #" "
0 0 14 3 5 #"F#maj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Gmaj"
0 0 24 3 1 #" "
0 0 14 3 5 #"G#maj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Amaj"
0 0 24 3 1 #" "
0 0 14 3 5 #"A#maj"
0 0 24 3 1 #" "
0 0 14 3 4 #"Bmaj"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"Cmin"
0 0 24 3 1 #" "
0 0 14 3 5 #"C#min"
0 0 24 3 1 #" "
0 0 14 3 4 #"Dmin"
0 0 24 3 1 #" "
0 0 14 3 5 #"D#min"
0 0 24 3 1 #" "
0 0 14 3 4 #"Emin"
0 0 24 3 1 #" "
0 0 14 3 4 #"Fmin"
0 0 24 3 1 #" "
0 0 14 3 5 #"F#min"
0 0 24 3 1 #" "
0 0 14 3 4 #"Gmin"
0 0 24 3 1 #" "
0 0 14 3 5 #"G#min"
0 0 24 3 1 #" "
0 0 14 3 4 #"Amin"
0 0 24 3 1 #" "
0 0 14 3 5 #"A#min"
0 0 24 3 1 #" "
0 0 14 3 4 #"Bmin"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 4 #"midi"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"rename-out"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 6 #"s-kick"
0 0 24 3 1 #" "
0 0 14 3 4 #"kick"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 7 #"s-snare"
0 0 24 3 1 #" "
0 0 14 3 5 #"snare"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 14 3 8 #"bassdrum"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 7 #"s-crash"
0 0 24 3 1 #" "
0 0 14 3 5 #"crash"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 7 #"s-hihat"
0 0 24 3 1 #" "
0 0 14 3 5 #"hihat"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 6 #"synth2"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"synth"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Data Definitions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"note"
0 0 24 3 2 #" ["
0 0 14 3 10 #"instrument"
0 0 24 3 1 #" "
0 0 14 3 5 #"pitch"
0 0 24 3 1 #" "
0 0 14 3 7 #"effects"
0 0 24 3 2 #"] "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 2 #" ["
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 5 #"beats"
0 0 24 3 2 #"] "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; A Beat is a positive integer"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; A Pitch is a positive integer"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; An Rsound is from the rnote library"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; A Song is a [Listof Player]"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; A Player is a (player [Beat -> [Maybe Note]] [Listof Beat])"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; A Note is a (note Instrument Pitch [Listof SoundEffect])"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; An Instrument is a [Pitch -> Rsound]"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; A SoundEffect is a [Rsound -> Rsound]"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; A Key is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; - [Listof Pitch] with length 7"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; - '()"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; A Key-Type is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'major"
0 0 24 29 1 #"\n"
0 0 17 3 10 #"; - 'minor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; INTEPRETATION"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; Beat represents the moments of time in the song."
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; Pitch represents the frequency of a note."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; Song represents the overarching piece of \"music.\""
0 0 24 29 1 #"\n"
0 0 17 3 98
(
 #"; Player represents a single track of the song. It specifies some no"
 #"tes for each beat of the song."
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#"; Note represents the individual notes that make up the song."
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #"; Instrument represents an musical instrument or synthesizer that ca"
 #"n be played at different pitches."
) 0 0 24 29 1 #"\n"
0 0 17 3 65
#";    Some instruments have no effect when their pitch is changed."
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; SoundEffect represents a modification to an Rsound."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Constants"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Define instruments"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Rsound -> Instrument"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; Create a instrument that always return the rnote, scaled."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"s-rs"
0 0 24 3 2 #" ("
0 0 14 3 8 #"rs-scale"
0 0 24 3 1 #" "
0 0 21 3 2 #".3"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 4 #"s-rs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 8 #"bassdrum"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"s-kick"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 4 #"kick"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-snare"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 5 #"snare"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-crash"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 12 #"crash-cymbal"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-hihat"
0 0 24 3 2 #" ("
0 0 14 3 14 #"rs->instrument"
0 0 24 3 1 #" "
0 0 14 3 8 #"o-hi-hat"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 10 #"synth-note"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"main\""
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"synth2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 10 #"synth-note"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"main\""
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tempo"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"stream"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 15 3 19 #"default-sample-rate"
0 0 24 3 2 #") "
0 0 14 3 5 #"tempo"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; Predicates"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Any -> Boolean?"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Is this a song?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"song?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 7 #"player?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Any -> Boolean?"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; Is this an instrument?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"instrument?"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 15 #"procedure-arity"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; N -> (void)"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Update the tempo and beat length"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; EFFECT sets the tempo and beat length."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-tempo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"tempo"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 15 3 19 #"default-sample-rate"
0 0 24 3 2 #") "
0 0 14 3 5 #"tempo"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Note -> Rsound"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Turns the note struct into an rsound"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-bassdrum"
0 0 24 3 2 #" ("
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"identity"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"b-bassdrum"
0 0 24 3 2 #" ("
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"rs-reverb"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-bassdrum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 1 #" "
0 0 14 3 10 #"b-bassdrum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 9 #"rs-reverb"
0 0 24 3 2 #" ("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 7 #"compose"
0 0 24 3 2 #" ("
0 0 14 3 12 #"note-effects"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   (("
0 0 14 3 15 #"note-instrument"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 10 #"note-pitch"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Note N -> (void)"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"; Queues a note onto the stream to play at a certain beat number."
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Beat-num should NOT be 0! "
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; The pstream plays upon creation, so it is impossible to hear notes"
 #" at beat 0."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"play-at-beat"
0 0 24 3 1 #" "
0 0 14 3 3 #"snd"
0 0 24 3 1 #" "
0 0 14 3 8 #"beat-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 8 #"beat-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"pstream-queue"
0 0 24 3 1 #" "
0 0 14 3 6 #"stream"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 1 #" "
0 0 14 3 3 #"snd"
0 0 24 3 3 #") ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 1 #" "
0 0 14 3 8 #"beat-num"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 33 #"\"Cannot play notes at beat-num 0\""
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Player N -> (void)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Queues the notes of a loop at a specified beat number onto the str"
 #"eam."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"play-player-at-beat"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 8 #"beat-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 8 #"beat-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 12 #"play-at-beat"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 8 #"beat-num"
0 0 24 3 2 #") "
0 0 14 3 8 #"beat-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 4 #"void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; N -> N"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; Calculate the beat that the specified frame belongs to."
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; Frame 0 corresponds to beat 0. Frame <beat-length> is beat 1."
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; There should NOT be anything playing at beat 0!"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"frame->beat"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"frame->beat"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"floor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 5 #"frame"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; N -> N"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; Calculate the first frame of the specified beat."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"round"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 1 #" "
0 0 14 3 4 #"beat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"beat"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; -> N"
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; Get the current beat number."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-beat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"frame->beat"
0 0 24 3 2 #" ("
0 0 14 3 21 #"pstream-current-frame"
0 0 24 3 1 #" "
0 0 14 3 6 #"stream"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; -> N"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; Get the frame number of the next down beat."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"next-beat-frame"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-beat"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; QUEUE-SIZE defines how many beats to queue at once."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"QUEUE-SIZE"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#"; QUEUE-AHEAD defines how far in advance to queue notes, in beats."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"QUEUE-AHEAD"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Song N -> (void)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Queues all notes in a song for a given beat."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"play-song-at-beat"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 4 #"beat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 19 #"play-player-at-beat"
0 0 24 3 1 #" "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 14 3 4 #"beat"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #"; Song -> (void)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; play-song runs indefinitely, playing the specified song."
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; EFFECT plays notes FOREVER"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"play-song"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"stream"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-pstream"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 11 #"QUEUE-AHEAD"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 17 #"play-song-at-beat"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 11 #"last-queued"
0 0 24 3 1 #" "
0 0 14 3 11 #"QUEUE-AHEAD"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"queue-to"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-beat"
0 0 24 3 2 #") "
0 0 14 3 10 #"QUEUE-SIZE"
0 0 24 3 1 #" "
0 0 14 3 11 #"QUEUE-AHEAD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 11 #"last-queued"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"queue-to"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"play-song-at-beat"
0 0 24 3 1 #" "
0 0 14 3 4 #"song"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"sleep"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat->frame"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 10 #"QUEUE-SIZE"
0 0 24 3 2 #" ("
0 0 14 3 12 #"current-beat"
0 0 24 3 5 #"))) ("
0 0 14 3 21 #"pstream-current-frame"
0 0 24 3 1 #" "
0 0 14 3 6 #"stream"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 19 #"default-sample-rate"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 8 #"queue-to"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; Define provided player constructor and modifiers"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Instrument [Listof N] -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 61
#"; Creates a player object given a note when to play the note."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 10 #"instrument"
0 0 24 3 1 #" "
0 0 14 3 10 #"play-times"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"player"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"beat"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"should-play"
0 0 24 3 2 #" ("
0 0 14 3 6 #"member"
0 0 24 3 1 #" "
0 0 14 3 4 #"beat"
0 0 24 3 1 #" "
0 0 14 3 10 #"play-times"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 11 #"should-play"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 14 3 10 #"instrument"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 10 #"play-times"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; N Player -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; Loops a player using the specified loop length."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"simple"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 6 #"simple"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 6 #"simple"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 6 #"simple"
0 0 24 3 2 #") "
0 0 21 3 2 #"53"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 6 #"simple"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-loop"
0 0 24 3 1 #" "
0 0 14 3 8 #"loop-len"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"mod-beat"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 8 #"loop-len"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"(("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 8 #"mod-beat"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; [Listof X] [Listof Beat] Beat -> [Maybe X]"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #"; Returns the X in the list of X corresponding to the given Beat in "
 #"the list of Beats."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #")("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; Key [Listof Pitch] Player -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Sets the pitches of the player"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-pitches"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 7 #"pitches"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 7 #"pitches"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-beats"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 13 #"keyed-pitches"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 14 3 7 #"pitches"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"l-pitch"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 14 3 13 #"keyed-pitches"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-beats"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 1 #" "
0 0 14 3 7 #"l-pitch"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 6 #"l-note"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 5 #"pitch"
0 0 24 3 1 #" "
0 0 14 3 7 #"l-pitch"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 6 #"l-note"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 21 #"raise-arguments-error"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 14 3 11 #"set-pitches"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 55 #"\"List of pitches must be same length as player's beats\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 9 #"\"pitches\""
0 0 24 3 1 #" "
0 0 14 3 7 #"pitches"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 3 #"\"p\""
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Key Pitch -> Pitch"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; given a relative pitch to a key, returns the proper midi note"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 2 #"64"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 2 #"60"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"p-adjusted"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #") "
0 0 14 3 1 #"p"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 10 #"p-adjusted"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 10 #"p-adjusted"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 10 #"p-adjusted"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #" ("
0 0 14 3 12 #"pitch-in-key"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Symbol Pitch -> Key"
0 0 24 29 1 #"\n"
0 0 17 3 46 #"; Makes a key, given the midi note to start on"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 1 #" "
0 0 21 3 2 #"71"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 1 #" "
0 0 21 3 2 #"71"
0 0 24 3 1 #" "
0 0 21 3 2 #"73"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 21 3 2 #"63"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 1 #" "
0 0 21 3 2 #"68"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-type"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"add-n"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"add-n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 8 #"key-type"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"add-n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; Predefined Keys"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"midi"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Cmaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"C#maj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"61"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Dmaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"D#maj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"63"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Emaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Fmaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"F#maj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Gmaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"G#maj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"68"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Amaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"A#maj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Bmaj"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"71"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Cmin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"C#min"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"61"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Dmin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"D#min"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"63"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Emin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Fmin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"F#min"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Gmin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"G#min"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"68"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Amin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"A#min"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Bmin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"minor"
0 0 24 3 1 #" "
0 0 21 3 2 #"71"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Player -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; Adds reverb to the player."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"set-reverb"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 6 #"player"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"add-effect"
0 0 24 3 1 #" "
0 0 14 3 9 #"rs-reverb"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"  "
0 0 14 3 6 #"l-note"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"; Number Player -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; Sets the amplitude of the player "
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Vol should be between 0 and 1."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-amp"
0 0 24 3 1 #" "
0 0 14 3 3 #"vol"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 6 #"player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"add-effect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-amp-effect"
0 0 24 3 1 #" "
0 0 14 3 3 #"vol"
0 0 24 3 2 #") "
0 0 14 3 6 #"l-note"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"  "
0 0 14 3 6 #"l-note"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; [Listof Number] Player -> Player"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Sets the amplitude of each note of the player "
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Vol should be between 0 and 1."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-amps"
0 0 24 3 1 #" "
0 0 14 3 4 #"vols"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 6 #"player"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 14 3 1 #"p"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"["
0 0 14 3 4 #"func"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 3 #" (("
0 0 14 3 11 #"player-func"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"vol"
0 0 24 3 2 #" ("
0 0 14 3 11 #"beat-lookup"
0 0 24 3 1 #" "
0 0 14 3 4 #"vols"
0 0 24 3 2 #" ("
0 0 14 3 12 #"player-beats"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 6 #"l-note"
0 0 24 3 1 #" "
0 0 14 3 3 #"vol"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"add-effect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-amp-effect"
0 0 24 3 1 #" "
0 0 14 3 3 #"vol"
0 0 24 3 2 #") "
0 0 14 3 6 #"l-note"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #"  "
0 0 14 3 6 #"l-note"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; SoundEffect Note -> Note"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Adds the soundeffect to the note"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"note->rs"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-effect"
0 0 24 3 1 #" "
0 0 14 3 9 #"rs-reverb"
0 0 24 3 1 #" "
0 0 14 3 10 #"a-bassdrum"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 8 #"note->rs"
0 0 24 3 1 #" "
0 0 14 3 10 #"b-bassdrum"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"add-effect"
0 0 24 3 1 #" "
0 0 14 3 2 #"se"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-note"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 4 #"note"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-note"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 4 #"   ["
0 0 14 3 7 #"effects"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"se"
0 0 24 3 2 #" ("
0 0 14 3 12 #"note-effects"
0 0 24 3 1 #" "
0 0 14 3 6 #"a-note"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Defining Sound Effects"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Number -> SoundEffect"
0 0 24 29 1 #"\n"
0 0 17 3 43 #"; Creates a SoundEffect that sets amplitude"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; a should be between 0 and 1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"mk-amp-effect"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 8 #"rs-scale"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; Rsound -> Rsound"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; Adds reverb to the actual rsound."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rs-reverb"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"signal->rsound"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 5 #"round"
0 0 24 3 1 #" "
0 0 14 3 11 #"beat-length"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 0 24 3 1 #"("
0 0 14 3 7 #"network"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ["
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 19 #"rsound->signal/left"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ["
0 0 14 3 3 #"out"
0 0 24 3 1 #" "
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 6 #"reverb"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"play-song"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-amps"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #".3"
0 0 24 3 3 #") ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-hihat"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 7 #"s-snare"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 10 #"s-bassdrum"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"play-song"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-pitches"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #") ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 1 24 65 1 #"\t"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-pitches"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"major"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 22 #"player-from-instrument"
0 0 24 3 1 #" "
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
